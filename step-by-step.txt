1. Activate virtual environment in CMD
2. Go to project folder in CMD
3. python manage.py runserver
4. Add django apps:
4.1 Stop server
4.2 python manage.py startapp blog
4.3 python manage.py startapp events (Events on start page)
4.4 git add . + git commit -> push to GitHub
5. Add models in App -> models.py
6. class Event(models.Model):   create class Event with parent Model in db
6.1 event_image = models.ImageField(upload_to='event_images/')  create column "event_image" in table Event
6.2 event_text = models.CharField(max_length=300)               create column "event_text" in table Event
7. Update migration - to know db that new Apps is created
7.1 python manage.py migrate        migration for pre created Apps
7.2 Go to setting.py, add in INSTALLED_APPS 'events.apps.EventsConfig' (see in folder events -> apps.py)
7.3 Create folder 'media' in root directory
7.4 Add "MEDIA_ROOT = BASE_DIR / 'media'" in settings.py (for link folder in system, in this folder will create folder 'event_images')
7.5 Add "MEDIA_URL = '/media/'" in settings.py (for link folder in web)
7.6 To apply changes - python manage.py makemigrations
7.7 To save second app - python manage.py migrate

8. Admin panel
8.1 create superuser: python manage.py createsuperuser
8.2 Go to "http://127.0.0.1:8000/admin/" and log in there
8.3 Go to admin.py, import class Event to show in admin panel:
from .models import Event
admin.site.register(Event)
8.4 First line - App's name, second - model name
8.5 click on add event and choose image and type text and Save. First object in db was created
9. If image don't show -> add in end in file urls.py:  + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
and from django.conf import settings
from django.conf.urls.static import static
10. To connect db - in settings.py sqlite -> postgresql
10.1 'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'myawesomeblogdb',
        'USER': 'postgres',
        'PASSWORD': '***',
        'HOST': '127.0.0.1',
        'PORT': '5432'
10.2 python manage.py migrate

11 In urls.py add 'import events.views' and add 'path('', events.views.home, name='home'),'
12 Create folder 'templates/events' in app 'events' and there create file home.html

13 In file 'home.html' create html's structure with Bootstrap, delete repeatable and unused items.
14 In app events in file views.py in function home add:
    events = Event.objects
    return render(request, 'events/home.html', {'events': events})
15 Then in file home.html add loop {% for event in events.all %} ... {%  endfor %}
16 When is needed add {{ event.event_image.url }}, {{ event.event_text }}

17 In blog app's create file urls.py. In this file add:
from django.urls import path
from . import views

urlpatterns = [

    path('', views.showblog, name='showblog'),

]
18 In main file urls.py add row:
    path('posts/', include('blog.urls')),

19 Add in views.py:
def showblog(request):
    posts = Blog.objects
    return render(request, 'blog/blog.html', {'posts': posts})

20 Create template in blog/templates/blog file blog.html and add loop as in 15-16
21 Add link for <h2> in blog.html
22 To split text add in models.py:
        def get_summary(self):
        return self.blog_text[:70]
    and add {{ post.get_summary }}

23 To add specific post's page need to add in blog/urls.py:
    path('<int:post_id>/', views.specific_post, name='specific_post'),
24 In blog/views.py add:
    def specific_post(request, post_id):
    post = get_object_or_404(Blog, pk=post_id)
    return render(request,'blog/specific_post.html', {'post': post})
25 Create template in blog/templates/blog file specific_post.html and add {{ post.blog_title }}

26 For static files need to create folder static in folder myawesomeblog, add there files
27 In settings add:
STATICFILES_DIRS = [

    BASE_DIR / 'myawesomeblog/static/'

]
STATIC_ROOT = BASE_DIR / 'static'
28 In CMD type 'python manage.py collectstatic'. It will create new folder static in root directory.
29 In home.html after tag html add {% load static %} and in div with About me add link href="{% static 'Aboutme.txt' %}"
30 To add image in home.html use <img src="{% static 'IMG_20150615_183224_1.jpg' %}" height="300" width="300" class="img-fluid">
31 To add link to blog page in home.html add:
href="{% url 'showblog' %} (as in urls.py)
32 To link to specific posts in blog.html add {% url 'specific_post' post.id %}
33 Create in file specific_post.html structure
